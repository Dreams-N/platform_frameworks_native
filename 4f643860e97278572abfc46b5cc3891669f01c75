Revision: 4f643860e97278572abfc46b5cc3891669f01c75
Patch-set: 1
File: libs/binder/ProcessState.cpp

313
Tue Dec 11 18:21:19 2012 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: M5Bnb-Bw
Bytes: 170
the ioctl to get the binder version _reads_ the version passed in? that sounds more like either (a) valgrind is confused or (b) there's a bug in the ioctl implementation?

313
Wed Dec 12 08:06:51 2012 +0000
Author: Wei Jin <1010988@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: M5Bnb-Bw
UUID: M4psH-M8
Bytes: 362
Yes. valgrind may be confused about some system calls and ioctl is just a case in point. Normally, you need to add a wrapper in valgrind itself for specific kind of operation so that valgrind could recognize it.

Here it seems that it is not only just read, macro BINDER_VERSION uses _IOWR, like this:

#define BINDER_VERSION	_IOWR('b', 9, struct binder_version)

313
Thu Dec 13 18:23:42 2012 +0000
Author: Iliyan Malchev <1000866@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: M4psH-M8
UUID: M75AH5c8
Bytes: 171
Yeah that should be _IOW only.  Add Arve for comments.

Is Valgrind smart enough to track the specific ioctl declaration and generate a warning based on that?  If so--WOW.

313
Thu Dec 13 18:29:33 2012 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: M75AH5c8
UUID: M1PL8Z2k
Bytes: 377
You can't change it to _IOW, because that would change the ioctl number and break the api.  The ioctl number is just a number to the kernel.  The _IOWR macros provide a convenient convention to store a direction flag that most modern ioctls use, but binder does not.  The direction bits in binder ioctls are not reliable, so you'll need a manual definition in valgrind somehow.

313
Thu Dec 13 22:51:48 2012 +0000
Author: Kenny Root <1002975@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: M1PL8Z2k
UUID: M11KZ9is
Bytes: 142
There's a special case in
external/valgrind/main/coregrind/m_syswrap/syswrap-linux.c for BINDER_VERSION. What's the exact error you're seeing?

313
Thu Dec 13 22:51:55 2012 +0000
Author: Arve Hjønnevåg <1000205@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: M1PL8Z2k
UUID: M1DJG7FE
Bytes: 169
You can add an ioctl to the driver without breaking compatibility as long as you keep the old one. If you change user-space to use it however, old kernels will not work.

313
Fri Dec 14 09:57:00 2012 +0000
Author: Evgenii Stepanov <1005967@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: M11KZ9is
UUID: M3QepBHw
Bytes: 351
In general, Valgrind relies on the ioctl direction flag, but, as Kenny said, there is a special case for BINDER_VERSION that should take care of this. Reading Valgrind code, a read warning for this argument should not be possible.

Note that this argument is declared as struct {long; } in binder.h (under bionic/). Does not matter on 32-bits, though.

