Revision: f347d996464b044a63bc9ccf851681b16d4b9c1f
Patch-set: 6
File: include/binder/PersistableBundle.h

91
Wed Dec 02 21:56:57 2015 +0000
Author: Christopher Wiley <1057759@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5b1deb19_8aa87bf9
Bytes: 40
Don't do this.  Just return ! lhs == rhs

91
Thu Dec 03 01:24:49 2015 +0000
Author: Samuel Tan <1077754@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5b1deb19_8aa87bf9
UUID: bbb18759_9a58ac7f
Bytes: 4
Done

File: libs/binder/PersistableBundle.cpp

123
Wed Dec 02 21:56:57 2015 +0000
Author: Christopher Wiley <1057759@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fb113f0a_c8eb9bd1
Bytes: 65
nit: you could express this with less duplication as size() == 0u

123
Thu Dec 03 01:24:49 2015 +0000
Author: Samuel Tan <1077754@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fb113f0a_c8eb9bd1
UUID: bbb18759_3a34201f
Bytes: 4
Done

304
Wed Dec 02 21:56:57 2015 +0000
Author: Christopher Wiley <1057759@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1b17f3fd_63642c64
Bytes: 11
Still true?

304
Thu Dec 03 01:24:49 2015 +0000
Author: Samuel Tan <1077754@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1b17f3fd_63642c64
UUID: 1bac5306_e6fde25d
Bytes: 162
Yes, this is still true. However, this really shouldn't happen if both the Java and C++ API are kept in sync and are serializing key-type-value triplets properly.

346
Wed Dec 02 21:56:57 2015 +0000
Author: Christopher Wiley <1057759@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1bac5306_009a9692
Bytes: 165
auto it = mStringVectorMap.find(key);
if (it != mStringVectorMap.end()) {
  return BAD_INDEX;
}

RETURN_IF_FAILED(parcel->readString16Vector(&mStringVectorMap[key]);

346
Thu Dec 03 01:24:49 2015 +0000
Author: Samuel Tan <1077754@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1bac5306_009a9692
UUID: 5ba24b12_2bb20e55
Bytes: 334
I decided to check for key uniqueness in each of the put* methods. Since the Java API enforces unique keys by putting all key-value pairs in a single Java Map, we can assume when reading a PersistableBundle from a Parcel that all keys will be unique.

I have added an comment from lines 337-340 that explicitly states this assumption.

