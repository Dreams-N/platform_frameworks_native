Revision: 00018b3c5254a335340c645a658af6ba3423c72e
Patch-set: 2
File: opengl/tools/glgen/stubs/egl/EGL14cHeader.cpp

17
Tue Nov 11 23:55:12 2014 +0000
Author: Stephen Hines <1010056@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5a4f777e_f9bed1a4
Bytes: 116
Where are these generated from? Any changes in this CL seem like they are going to get wiped out if/when we refresh.

File: opengl/tools/glgen/stubs/gles11/glDrawArraysIndirect.cpp

6:53-6:84
Tue Nov 11 08:34:00 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7ac51b23_97aeaef6
Bytes: 122
I don't understand the comment above and am open for opinions. Maybe this should just be static_cast<jlong>(UINT32_MAX)...

6:53-6:84
Tue Nov 11 14:44:55 2014 +0000
Author: Jesse Hall <1010672@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7ac51b23_97aeaef6
UUID: 7ac51b23_224a1674
Bytes: 342
The code is trying to check whether 'indirect', a signed 64-bit value, is larger than the maximum 32-bit pointer value. If not, the cast in the call to glDrawArraysIndirect will modify the bits, and the call won't do what the app intended.

What warning are you getting here? Does the warning only happen in 64-bit builds (or only in 32-bit)?

6:53-6:84
Tue Nov 11 17:14:47 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7ac51b23_224a1674
UUID: 5a4f777e_e74ab11f
Bytes: 167
The warning is a signed-compare warning on 64b, as there UINTPTR_MAX is 64b unsigned.

From your description, the right thing here will be UINT32_MAX. Would you agree?

6:53-6:84
Tue Nov 11 23:55:12 2014 +0000
Author: Stephen Hines <1010056@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5a4f777e_e74ab11f
UUID: 5a4f777e_19640dbe
Bytes: 172
I think UINT32_MAX is a better value to use here. It is doing exactly that (making sure that you don't have a value that won't fit in 32-bits, but only on 32-bit compiles).

