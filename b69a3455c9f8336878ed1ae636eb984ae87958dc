Revision: b69a3455c9f8336878ed1ae636eb984ae87958dc
Patch-set: 2
File: libs/binder/Blueprints

40:0-40:10
Thu Apr 09 22:46:22 2015 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 234d525a_6b4b5db5
Bytes: 251
Sorry I didn't dig into the soong source files yet, but I am wondering:
So this builds both static and shared library?
Will each of .cpp files be compiled only once? or we just define two separate modules they happen to have the same source and flags?

40:0-40:10
Thu Apr 09 22:52:42 2015 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 234d525a_6b4b5db5
UUID: 234d525a_66aab47e
Bytes: 304
It will create rules to build static and shared libraries as needed.  The shared library will link in the .o files produced by the static library, and the static and shared libraries can also add .o files and cflags that only affect those .o files using static: { srcs: ["file.c"], cflags: ["-DSTATIC"] }

40:0-40:10
Thu Apr 09 23:04:01 2015 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 234d525a_66aab47e
UUID: e356daec_bef665a6
Bytes: 193
The configuration sounds flexible.
I am still wondering the meaning of "create rules as needed": if the library is never referenced by anyone, will the rule be created when you do a checkbuild?

40:0-40:10
Thu Apr 09 23:15:10 2015 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e356daec_bef665a6
UUID: 234d525a_464e90c6
Bytes: 103
Yes, the build.ninja file will have rules for both, and the checkbuild target has dependencies on both.

